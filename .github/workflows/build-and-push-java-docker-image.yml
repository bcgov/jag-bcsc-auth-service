on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      working_directory:
        required: true
        type: string
    secrets:
      openshift_server_url:
        required: true
      openshift_token:
        required: true
      openshift_external_repository:
        required: true
      openshift_namespace:
        required: true
      username:
        required: true
      password:
        required: true

jobs:
  build-image:
    name: Build and deploy image to OpenShift
    environment: 'dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ${{ inputs.working_directory }}

    steps:
      - uses: actions/checkout@v2

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: "${{ inputs.app_name }}.jar"
          path: "${{ inputs.working_directory }}/target/${{ inputs.app_name }}.jar"

      - name: Authenticate and set context
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ secrets.openshift_server_url }}
          openshift_token: ${{ secrets.openshift_token }}
          namespace: ${{ secrets.openshift_namespace }}

      - name: Cache local Maven repository
        uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Get Java Project Version
        run: |
          _version=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          echo "APP_VERSION=$_version" | tee -a $GITHUB_ENV

      - name: Determine image tags
        run: |
          echo "IMAGE_TAG=${APP_VERSION}-${GITHUB_SHA::8}" | tee -a $GITHUB_ENV

      - name: Docker Login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.username }}
          password: ${{ secrets.password }}
          registry: ${{ secrets.openshift_external_repository }}

      - name: Build from Dockerfile
        id: build-image
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ${{ secrets.openshift_external_repository }}/${{ secrets.openshift_namespace }}/${{ inputs.app_name }}:latest
            ${{ secrets.openshift_external_repository }}/${{ secrets.openshift_namespace }}/${{ inputs.app_name }}:${{ env.IMAGE_TAG }}
          context: "./${{ inputs.working_directory }}"
          build-args: |
            APP_NAME=${{ inputs.app_name }}
            APP_VERSION=${{ env.APP_VERSION }}